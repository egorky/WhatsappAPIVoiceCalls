[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
WEB_CLIENT_EXTEN=1000 ; Example extension for the WebRTC client
YOUR_WHATSAPP_BUSINESS_NUMBER=+12345678901 ; IMPORTANT: Your full WhatsApp Business number with country code
ARI_APP_NAME=whatsapp-ari-app ; Stasis application name, must match ari_whatsapp_connector.js

[from-whatsapp]
; Incoming calls from WhatsApp, route to ARI Stasis application
exten => _X.,1,NoOp(Incoming call from WhatsApp: ${CALLERID(all)} to ${EXTEN}. Routing to ARI Stasis app: ${ARI_APP_NAME})
  same => n,Stasis(${ARI_APP_NAME},${EXTEN}) ; Pass the originally dialed number as an argument
  same => n,Hangup()

[from-webrtc]
; Outgoing calls from WebRTC client to WhatsApp
; This context can remain for direct dialing if preferred, or could also be routed to Stasis
; For now, keeping it simple for direct outbound via trunk from dialplan.
exten => _X.,1,NoOp(Outgoing call from WebRTC ${CALLERID(num)} to WhatsApp user ${EXTEN})
  same => n,Set(CALLERID(num)=${YOUR_WHATSAPP_BUSINESS_NUMBER}) ; Set your WhatsApp Business Number as Caller ID
  same => n,Dial(PJSIP/${EXTEN}@whatsapp_trunk_endpoint,60,Ttor) ; Ensure 'whatsapp_trunk_endpoint' is defined in pjsip
  same => n,Hangup()

; Dialing the WebRTC client directly (e.g. if it registers as 1000 and is called internally, not from WhatsApp)
; This might be used for internal testing or if other parts of the dialplan need to reach the WebRTC client.
exten => ${WEB_CLIENT_EXTEN},1,NoOp(Call to WebRTC client ${EXTEN} from ${CALLERID(num)})
  same => n,Dial(PJSIP/web_client,45,Ttor) ; Assumes 'web_client' is the PJSIP endpoint name for the WebRTC client
  same => n,Hangup()
